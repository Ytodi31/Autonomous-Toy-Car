<launch>
  <param name="robot_description"
        textfile="$(find toycar)/urdf/toycar.urdf" />

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
     <arg name="world_name" value="$(find toycar)/world/maze.world"/>

  </include>


  <!-- <arg name="world_name" value="$(find toycar)/world/newworld.world"/> -->
            <!-- more default parameters can be changed here -->
        <!-- <include file="$(find gazebo_ros)/launch/empty_world.launch"> -->
<!--
        <arg name="paused" default="false"/>
        <arg name="use_sim_time" default="true"/>
        <arg name="gui" default="true"/>
        <arg name="headless" default="false"/>
        <arg name="debug" default="false"/> -->



<!--
            <node
              name="tf_footprint_base"
              pkg="tf"
              type="static_transform_publisher"
               args="0 0 0 0 0 0 base_link base_footprint 40" /> -->
          <node
            name="spawn_model"
            pkg="gazebo_ros"
            type="spawn_model"
            args="-file $(find toycar)/urdf/toycar.urdf -urdf -model toycar"
            output="screen"/>


          <node
            name="fake_joint_calibration"
            pkg="rostopic"
            type="rostopic"
            args="pub /calibrated std_msgs/Bool true"/>

          <node
            name ="toycar_publisher"
            pkg = "toycar"
            type = "toycar_publisher"/>


              <param name="robot_description"
                    textfile="$(find toycar)/urdf/toycar.urdf" />


              <!-- Load joint controller configurations from YAML file to parameter server -->
              <rosparam file="$(find toycar_controller)/config/toycar_controller.yaml"
                        command="load"/>

              <!-- load the controllers -->
              <node
                name="controller_spawner"
                pkg="controller_manager"
                type="spawner"
                respawn="false"
                output="screen"
                ns="/toycar"
                args="leftjoint_position_controller leftwheel_velocity_controller
                rightwheel_velocity_controller rightjoint_position_controller lidar_controller"/>

                <node
                  name="robot_state_publisher"
                  pkg="robot_state_publisher"
                  type="robot_state_publisher"
                  respawn="false"
                  output="screen">
                  <remap from="/joint_states" to="/toycar/joint_states" />
                </node>


            <node pkg="rviz" type="rviz" name="rviz"/>

            <include file="$(find hector_geotiff)/launch/geotiff_mapper.launch">
              <arg name="trajectory_source_frame_name" value="scanmatcher_frame"/>
            </include>


            <node pkg="tf" type="static_transform_publisher" name="t1"      args="0 0 0 0 0 0 /map /base_link 1000" />
            <node pkg="tf" type="static_transform_publisher" name="base_to_laser_broadcaster"      args="0 0 0 0 0 0 /base_link /chassis 1000" />
            <node pkg="tf" type="static_transform_publisher" name="base"      args="0.03 0.6 0.25 -1.57 0 0 /chassis /base_laser 1000" />



            <arg name="pub_map_odom_transform" default="true"/>
            <arg name="tf_map_scanmatch_transform_frame_name" default="scanmatcher_frame"/>
            <arg name="scan_subscriber_queue_size" default="5"/>
            <arg name="scan_topic" default="/scan"/>
            <arg name="map_size" default="4048"/>





<node pkg="hector_mapping" type="hector_mapping" name="hector_mapping"    output="screen">

                   <param name="pub_map_odom_transform" value="true"/>
                   <param name="map_frame" value="map" />
                   <param name="base_frame" value="chassis" />
                   <param name="odom_frame" value="chassis" />
                   <param name = "use_sim_time"  value="false" />

                <!-- Frame names -->
                <param name="pub_map_scanmatch_transform " value="true"/>

                <!-- Tf use -->
                <param name="use_tf_scan_transformation" value="true"/>
                <param name="use_tf_pose_start_estimate" value="false"/>
                <param name="map_with_known_poses" value="true"/>

                <param name="pub_map_odom_transform" value="$(arg pub_map_odom_transform)"/>

                <!-- Map size / start point -->
                <param name="map_resolution" value="0.025"/>
                <param name="map_size" value="$(arg map_size)"/>
                <param name="map_start_x" value="0.5"/>
                <param name="map_start_y" value="0.5"/>
                <param name="map_multi_res_levels" value="2" />

                <!-- Map update parameters -->
                <param name="update_factor_free" value="0.4"/>
                <param name="update_factor_occupied" value="0.9" />
                <param name="map_update_distance_thresh" value="0.4"/>
                <param name="map_update_angle_thresh" value="0.06" />
                <param name="laser_z_min_value" value = "-1.0" />
                <param name="laser_z_max_value" value = "1.0" />
                <param name = "laser_min_dist" value = "0.5" />
                <param name="laser_max_dist" value = "7" />


                <!-- Advertising config -->
                <param name="advertise_map_service" value="true"/>

                <param name="scan_subscriber_queue_size" value="$(arg scan_subscriber_queue_size)"/>
                <param name="scan_topic" value="$(arg scan_topic)"/>
                <param name="tf_map_scanmatch_transform_frame_name"
                  value="$(arg tf_map_scanmatch_transform_frame_name)"/>

                <!-- Debug parameters -->
                <!--
                  <param name="output_timing" value="false"/>
                  <param name="pub_drawings" value="true"/>
                  <param name="pub_debug_output" value="true"/>-->
</node>

</launch>



          <!-- <node name="ydlidar_node"  pkg="ydlidar"  type="ydlidar_node" output="screen" respawn="false" >
         	<param name="calibrate_time" type="bool" value="true"/>
            <param name="port"         type="string" value="/dev/ydlidar"/>
            <param name="frame_id"     type="string" value="laser_frame"/>
            <param name="min_ang" value="-2.2689"/>
             <param name="max_ang" value="+2.2689"/>
              <param name="cluster" value="1"/>
            <param name="low_exposure"  type="bool"   value="false"/>
            <param name="resolution_fixed"    type="bool"   value="true"/>
            <param name="auto_reconnect"    type="bool"   value="true"/>
            <param name="reversion"    type="bool"   value="false"/>
            <param name="angle_min"    type="double" value="-180" />
            <param name="angle_max"    type="double" value="180" />
            <param name="range_min"    type="double" value="0.1" />
            <param name="range_max"    type="double" value="16.0" />
            <param name="ignore_array" type="string" value="" />
            <param name="samp_rate"    type="int"    value="9"/>
            <param name="frequency"    type="double" value="7"/>
            <param name="min_ang" value="-2.2689"/>
            <param name="max_ang" value="+2.2689"/>
            <param name="cluster" value="1"/>
          </node> >
              </launch-->
